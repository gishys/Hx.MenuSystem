// <auto-generated />
using System;
using Hx.MenuSystem.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Migrations
{
    [DbContext(typeof(MenuSystemMigrationsContext))]
    [Migration("20250401065326_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.PostgreSql)
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hx.MenuSystem.Domain.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<Guid?>("AppFormId")
                        .HasColumnType("uuid")
                        .HasColumnName("APP_FORM_ID");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("APP_NAME");

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CONCURRENCY_STAMP");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("DISPLAY_NAME");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("EXTRA_PROPERTIES");

                    b.Property<string>("Icon")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("ICON");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("NAME");

                    b.Property<double>("Order")
                        .HasColumnType("double precision")
                        .HasColumnName("ORDER");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("PARENT_ID");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("PERMISSION_NAME");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("ROUTE");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TENANTID");

                    b.HasKey("Id");

                    b.HasIndex("AppName");

                    b.HasIndex("Name");

                    b.ToTable("SYS_MENUS", (string)null);
                });

            modelBuilder.Entity("Hx.MenuSystem.Domain.UserMenu", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("USER_ID");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid")
                        .HasColumnName("MENU_ID");

                    b.Property<double>("Order")
                        .HasColumnType("double precision")
                        .HasColumnName("ORDER");

                    b.HasKey("UserId", "MenuId");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserId");

                    b.ToTable("SYS_USERMENUS", (string)null);
                });

            modelBuilder.Entity("Hx.MenuSystem.Domain.UserMenu", b =>
                {
                    b.HasOne("Hx.MenuSystem.Domain.Menu", null)
                        .WithMany("Users")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hx.MenuSystem.Domain.Menu", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
